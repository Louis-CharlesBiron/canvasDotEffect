Array.prototype.last=function(index=0){return this[this.length-1-index]},Array.prototype.addAt=function(el,index=0){return this.slice(0,index).concat(el,this.slice(index,this.length))};class CDEUtils{static DEFAULT_ACCEPTABLE_DIFFERENCE=1e-7;static CIRC=2*Math.PI;static random(min,max,decimals=0){return+(Math.random()*(max-min)+min).toFixed(decimals)}static clamp(value,min=1/0,max=1/0){return value<min?min:value>max?max:value}static isDefined(v){return null!=v}static isFunction(v){return"function"==typeof v}static FPSCounter=class{constructor(avgSampleSize){this._t=[],this._maxFps=0,this._avgSampleSize=avgSampleSize||10,this._avg=[]}getFpsRaw(){let fps,n=performance.now();for(;this._t.length>0&&this._t[0]<=n-1e3;)this._t.shift();return fps=this._t.push(n),this._maxFps<fps&&(this._maxFps=fps),fps}getFps(){return this._avg.push(this.getFpsRaw()),this._avg.length>this._avgSampleSize&&this._avg.shift(),Math.floor(Math.min(this._avg.reduce(((a,b)=>a+b),0)/this._avgSampleSize,this._maxFps))}get maxFps(){return this._maxFps-1}get avgSample(){return this._avgSampleSize}get fpsRaw(){return this._t.length}set avgSample(s){this._avgSampleSize=s}};static getDist(x1,y1,x2,y2){return Math.sqrt((x1-x2)**2+(y1-y2)**2)}static getLinearFn(pos1,pos2){const a=(pos2[1]-pos1[1])/(pos2[0]-pos1[0]),b=-a*pos1[0]+pos1[1];return[a,b,x=>a*x+b,pos1]}static getPerpendicularLinearFn(linearFnResult){const a=-1/linearFnResult[0],pos=linearFnResult[3],b=-a*pos[0]+pos[1];return[a,b,x=>a*x+b,pos]}static getValueFromRange(minMax){return Array.isArray(minMax)?CDEUtils.random(minMax[0],minMax[1]):minMax}static mod(max,ratio,range){return range??=max,max-ratio*range+max*((range>=0)-1)}static toRad(deg){return deg*(Math.PI/180)}static toDeg(rad){return rad/(Math.PI/180)}static getAcceptableDiff(n,acceptableDiff=CDEUtils.DEFAULT_ACCEPTABLE_DIFFERENCE){return Math.round(n)-n<=acceptableDiff?Math.round(n):n}static getMinMax(arr,propPath=null){let min=1/0,max=-1/0,ll=arr.length;for(let i=0;i<ll;i++){const v=propPath?+arr[i][propPath]:arr[i];v<min&&(min=v),v>max&&(max=v)}return[min,max]}static repeatedTimeout(iterationCount,callback,delay=5){let at=0;for(let i=0;i<iterationCount;i++)setTimeout((()=>callback(i)),at+=delay)}}class CanvasUtils{static SHOW_CENTERS_DOT_ID={};static LINE_VISIBILE_OPACITY=.01;static toggleCenter(shape,radius=5,color=[255,0,0,1]){if(CanvasUtils.SHOW_CENTERS_DOT_ID[shape.id])CVS.remove(CanvasUtils.SHOW_CENTERS_DOT_ID[shape.id]),delete CanvasUtils.SHOW_CENTERS_DOT_ID[shape.id];else{const dot=new Dot([0,0],radius,color,null,shape);CanvasUtils.SHOW_CENTERS_DOT_ID[shape.id]=dot.id,CVS.add(dot,!0)}}static showIntersectionPoints(res){const s_d1=new Dot(res.source.inner,3,[255,0,0,1]),s_d2=new Dot(res.source.outer,3,[255,0,0,.45]),t_d1=new Dot(res.target.outer,3,[255,0,0,.45]),t_d2=new Dot(res.target.inner,3,[255,0,0,1]);CVS.add(s_d1,!0),CVS.add(s_d2,!0),CVS.add(t_d1,!0),CVS.add(t_d2,!0)}static drawOuterRing(dot,color,radiusMultiplier){const ctx=dot.ctx;ctx.strokeStyle=Color.formatRgba(color)??color.color,ctx.beginPath(),ctx.arc(dot.x,dot.y,dot.radius*radiusMultiplier,0,CDEUtils.CIRC),ctx.stroke()}static drawConnection(dot,color,source,radiusPaddingMultiplier=0){const ctx=dot.ctx,[sx,sy]=source.pos||source;if(!(color[3]<CanvasUtils.LINE_VISIBILE_OPACITY||color.a<CanvasUtils.LINE_VISIBILE_OPACITY)){if(ctx.strokeStyle=Color.formatRgba(color)??color.color,ctx.beginPath(),radiusPaddingMultiplier){const res=dot.getLinearIntersectPoints(source,source.radius*radiusPaddingMultiplier,dot,dot.radius*radiusPaddingMultiplier);Line.draw(ctx,Line.getLine(res.source.inner,res.target.inner),color)}else Line.draw(ctx,Line.getLine([sx,sy],dot.pos),color);ctx.stroke()}}static drawDotConnections(dot,color,radiusPaddingMultiplier=0,isSourceOver=!1){const ctx=dot.ctx,dc_ll=dot.connections.length,colorValue=Color.formatRgba(color)??color.color;if(!(color[3]<CanvasUtils.LINE_VISIBILE_OPACITY||color.a<CanvasUtils.LINE_VISIBILE_OPACITY)){if(isSourceOver||(ctx.globalCompositeOperation="destination-over"),dc_ll)for(let i=0;i<dc_ll;i++){const c=dot.connections[i];if(ctx.strokeStyle=colorValue,ctx.beginPath(),radiusPaddingMultiplier){const res=dot.getLinearIntersectPoints(c,c.radius*radiusPaddingMultiplier,dot,dot.radius*radiusPaddingMultiplier);ctx.moveTo(res.source.inner[0],res.source.inner[1]),ctx.lineTo(res.target.inner[0],res.target.inner[1])}else ctx.moveTo(dot.x,dot.y),ctx.lineTo(c.x,c.y);ctx.stroke()}isSourceOver||(ctx.globalCompositeOperation="source-over")}}static getDraggableDotCB(){let mouseup=!1,dragAnim=null;return(dot,mouse,dist,ratio,pickableRadius=50)=>{mouse.clicked&&dist<pickableRadius?(mouseup=!0,dot?.currentBacklogAnim?.id===dragAnim?.id&&dragAnim&&dragAnim.end(),dot.x=mouse.x,dot.y=mouse.y):mouseup&&(mouseup=!1,dragAnim=dot.addForce(Math.min(CDEUtils.mod(Math.min(mouse.speed,3e3),ratio)/4,300),mouse.dir,750+1200*ratio,Anim.easeOutQuad))}}static rotateGradient(obj,duration=1e3,speed=1,isFillColor=!1){return obj.playAnim(new Anim((prog=>obj[isFillColor?"fillColorRaw":"colorRaw"].rotation=360*-speed*prog),duration))}static DRAW=class{static POINT(ctx,pos,radius,color){ctx.fillStyle=Color.formatRgba(color)??color.color,ctx.beginPath(),ctx.arc(...pos,radius,0,CDEUtils.CIRC),ctx.fill()}};static SHAPES=class{static DEBUG_SHAPE(pos,dots){return new Shape(pos||[100,100],dots||[new Dot,new Dot([100]),new Dot([,100]),new Dot([100,100])])}static THROWABLE_DOT(pos,radius,color){const dragAnim=CanvasUtils.getDraggableDotCB();return new Shape(pos||[10,10],new Dot,radius,color,null,((ctx,dot,ratio,m,dist,shape)=>{dragAnim(shape.firstDot,m,dist,ratio)}))}};static FOLLOW_PATHS=class{static INFINITY_SIGN(width,height,progressOffset){return width??=100,height??=50,progressOffset??=0,[[0,prog=>{const progress=CDEUtils.CIRC*((prog+progressOffset)%1);return[width*Math.sin(progress),height*Math.sin(2*progress)]}]]}static CIRCLE(width,height,progressOffset){return width??=100,height??=100,progressOffset??=0,[[0,prog=>{const progress=CDEUtils.CIRC*((prog+progressOffset)%1);return[width*Math.cos(progress),height*Math.sin(progress)]}]]}static RECTANGLE(width,height,progressOffset){return width??=100,height??=100,progressOffset??=0,[[0,prog=>{const pos=(prog+progressOffset)%1*2*(width+height);return pos<width?[pos,0]:pos<width+height?[width,pos-width]:pos<2*width+height?[width-(pos-(width+height)),height]:[0,height-(pos-(2*width+height))]}]]}static QUADRATIC(width,height,isFliped){width??=100,height??=200;const maxNaturalHeight=Math.pow(width/2,2);return[[0,prog=>{let x=(prog-.5)*width,y=height*(Math.pow(x,2)/maxNaturalHeight);return isFliped&&(y=height-y),[x,y]}]]}static LINEAR(width,a){return width??=100,a??=1,[[0,prog=>{const x=prog*width;return[x,a*x]}]]}static SINE_WAVE(width=100,height=100){return width??=100,height??=100,[[0,prog=>{const x=prog*width;return[x,height*Math.sin(CDEUtils.CIRC*x/width)]}]]}static COSINE_WAVE(width=100,height=100){return width??=100,height??=100,[[0,prog=>{const x=prog*width;return[x,height*Math.cos(CDEUtils.CIRC*x/width)]}]]}static RELATIVE(forceX,forceY){forceX??=void 0,forceY??=void 0;let isForceXFn=!1,isForceYFn=!1;return Array.isArray(forceX)&&(forceX=forceX.flat()[1],isForceXFn=!0),Array.isArray(forceY)&&(forceY=forceY.flat()[1],isForceYFn=!0),[[0,prog=>[isForceXFn?forceX(prog)[0]:forceX,isForceYFn?forceY(prog)[1]:forceX]]]}}}class Color{static DEFAULT_COLOR="aliceblue";static CSS_COLOR_TO_RGBA_CONVERTIONS={aliceblue:[240,248,255,1],antiquewhite:[250,235,215,1],aqua:[0,255,255,1],aquamarine:[127,255,212,1],azure:[240,255,255,1],beige:[245,245,220,1],bisque:[255,228,196,1],black:[0,0,0,1],blanchedalmond:[255,235,205,1],blue:[0,0,255,1],blueviolet:[138,43,226,1],brown:[165,42,42,1],burlywood:[222,184,135,1],cadetblue:[95,158,160,1],chartreuse:[127,255,0,1],chocolate:[210,105,30,1],coral:[255,127,80,1],cornflowerblue:[100,149,237,1],cornsilk:[255,248,220,1],crimson:[220,20,60,1],cyan:[0,255,255,1],darkblue:[0,0,139,1],darkcyan:[0,139,139,1],darkgoldenrod:[184,134,11,1],darkgray:[169,169,169,1],darkgreen:[0,100,0,1],darkkhaki:[189,183,107,1],darkmagenta:[139,0,139,1],darkolivegreen:[85,107,47,1],darkorange:[255,140,0,1],darkorchid:[153,50,204,1],darkred:[139,0,0,1],darksalmon:[233,150,122,1],darkseagreen:[143,188,143,1],darkslateblue:[72,61,139,1],darkslategray:[47,79,79,1],darkturquoise:[0,206,209,1],darkviolet:[148,0,211,1],deeppink:[255,20,147,1],deepskyblue:[0,191,255,1],dimgray:[105,105,105,1],dodgerblue:[30,144,255,1],firebrick:[178,34,34,1],floralwhite:[255,250,240,1],forestgreen:[34,139,34,1],fuchsia:[255,0,255,1],gainsboro:[220,220,220,1],ghostwhite:[248,248,255,1],gold:[255,215,0,1],goldenrod:[218,165,32,1],gray:[128,128,128,1],green:[0,128,0,1],greenyellow:[173,255,47,1],honeydew:[240,255,240,1],hotpink:[255,105,180,1],indianred:[205,92,92,1],indigo:[75,0,130,1],ivory:[255,255,240,1],khaki:[240,230,140,1],lavender:[230,230,250,1],lavenderblush:[255,240,245,1],lawngreen:[124,252,0,1],lemonchiffon:[255,250,205,1],lightblue:[173,216,230,1],lightcoral:[240,128,128,1],lightcyan:[224,255,255,1],lightgoldenrodyellow:[250,250,210,1],lightgray:[211,211,211,1],lightgreen:[144,238,144,1],lightpink:[255,182,193,1],lightsalmon:[255,160,122,1],lightseagreen:[32,178,170,1],lightskyblue:[135,206,250,1],lightslategray:[119,136,153,1],lightsteelblue:[176,224,230,1],lightyellow:[255,255,224,1],lime:[0,255,0,1],limegreen:[50,205,50,1],linen:[250,240,230,1],magenta:[255,0,255,1],maroon:[128,0,0,1],mediumaquamarine:[102,205,170,1],mediumblue:[0,0,205,1],mediumorchid:[186,85,211,1],mediumpurple:[147,112,219,1],mediumseagreen:[60,179,113,1],mediumslateblue:[123,104,238,1],mediumspringgreen:[0,250,154,1],mediumturquoise:[72,209,204,1],mediumvioletred:[199,21,133,1],midnightblue:[25,25,112,1],mintcream:[245,255,250,1],mistyrose:[255,228,225,1],moccasin:[255,228,181,1],navajowhite:[255,222,173,1],navy:[0,0,128,1],oldlace:[253,245,230,1],olive:[128,128,0,1],olivedrab:[107,142,35,1],orange:[255,165,0,1],orangered:[255,69,0,1],orchid:[218,112,214,1],palegoldenrod:[238,232,170,1],palegreen:[152,251,152,1],paleturquoise:[175,238,238,1],palevioletred:[219,112,147,1],papayawhip:[255,239,213,1],peachpuff:[255,218,185,1],peru:[205,133,63,1],pink:[255,192,203,1],plum:[221,160,221,1],powderblue:[176,224,230,1],purple:[128,0,128,1],rebeccapurple:[102,51,153,1],red:[255,0,0,1],rosybrown:[188,143,143,1],royalblue:[65,105,225,1],saddlebrown:[139,69,19,1],salmon:[250,128,114,1],sandybrown:[244,164,96,1],seagreen:[46,139,87,1],seashell:[255,245,238,1],sienna:[160,82,45,1],silver:[192,192,192,1],skyblue:[135,206,235,1],slateblue:[106,90,205,1],slategray:[112,128,144,1],snow:[255,250,250,1],springgreen:[0,255,127,1],steelblue:[70,130,180,1],tan:[210,180,140,1],teal:[0,128,128,1],thistle:[216,191,216,1],tomato:[255,99,71,1],turquoise:[64,224,208,1],violet:[238,130,238,1],wheat:[245,222,179,1],white:[255,255,255,1],whitesmoke:[245,245,245,1],yellow:[255,255,0,1],yellowgreen:[154,205,50,1]};static RGBA_TO_CSS_COLOR_CONVERTIONS={"240,248,255,1":"aliceblue","250,235,215,1":"antiquewhite","0,255,255,1":"aqua","127,255,212,1":"aquamarine","240,255,255,1":"azure","245,245,220,1":"beige","255,228,196,1":"bisque","0,0,0,1":"black","255,235,205,1":"blanchedalmond","0,0,255,1":"blue","138,43,226,1":"blueviolet","165,42,42,1":"brown","222,184,135,1":"burlywood","95,158,160,1":"cadetblue","127,255,0,1":"chartreuse","210,105,30,1":"chocolate","255,127,80,1":"coral","100,149,237,1":"cornflowerblue","255,248,220,1":"cornsilk","220,20,60,1":"crimson","0,0,139,1":"darkblue","0,139,139,1":"darkcyan","184,134,11,1":"darkgoldenrod","169,169,169,1":"darkgray","0,100,0,1":"darkgreen","189,183,107,1":"darkkhaki","139,0,139,1":"darkmagenta","85,107,47,1":"darkolivegreen","255,140,0,1":"darkorange","153,50,204,1":"darkorchid","139,0,0,1":"darkred","233,150,122,1":"darksalmon","143,188,143,1":"darkseagreen","72,61,139,1":"darkslateblue","47,79,79,1":"darkslategray","0,206,209,1":"darkturquoise","148,0,211,1":"darkviolet","255,20,147,1":"deeppink","0,191,255,1":"deepskyblue","105,105,105,1":"dimgray","30,144,255,1":"dodgerblue","178,34,34,1":"firebrick","255,250,240,1":"floralwhite","34,139,34,1":"forestgreen","220,220,220,1":"gainsboro","248,248,255,1":"ghostwhite","255,215,0,1":"gold","218,165,32,1":"goldenrod","128,128,128,1":"gray","0,128,0,1":"green","173,255,47,1":"greenyellow","240,255,240,1":"honeydew","255,105,180,1":"hotpink","205,92,92,1":"indianred","75,0,130,1":"indigo","255,255,240,1":"ivory","240,230,140,1":"khaki","230,230,250,1":"lavender","255,240,245,1":"lavenderblush","124,252,0,1":"lawngreen","255,250,205,1":"lemonchiffon","173,216,230,1":"lightblue","240,128,128,1":"lightcoral","224,255,255,1":"lightcyan","250,250,210,1":"lightgoldenrodyellow","211,211,211,1":"lightgray","144,238,144,1":"lightgreen","255,182,193,1":"lightpink","255,160,122,1":"lightsalmon","32,178,170,1":"lightseagreen","135,206,250,1":"lightskyblue","119,136,153,1":"lightslategray","176,224,230,1":"lightsteelblue","255,255,224,1":"lightyellow","0,255,0,1":"lime","50,205,50,1":"limegreen","250,240,230,1":"linen","255,0,255,1":"magenta","128,0,0,1":"maroon","102,205,170,1":"mediumaquamarine","0,0,205,1":"mediumblue","186,85,211,1":"mediumorchid","147,112,219,1":"mediumpurple","60,179,113,1":"mediumseagreen","123,104,238,1":"mediumslateblue","0,250,154,1":"mediumspringgreen","72,209,204,1":"mediumturquoise","199,21,133,1":"mediumvioletred","25,25,112,1":"midnightblue","245,255,250,1":"mintcream","255,228,225,1":"mistyrose","255,228,181,1":"moccasin","255,222,173,1":"navajowhite","0,0,128,1":"navy","253,245,230,1":"oldlace","128,128,0,1":"olive","107,142,35,1":"olivedrab","255,165,0,1":"orange","255,69,0,1":"orangered","218,112,214,1":"orchid","238,232,170,1":"palegoldenrod","152,251,152,1":"palegreen","175,238,238,1":"paleturquoise","219,112,147,1":"palevioletred","255,239,213,1":"papayawhip","255,218,185,1":"peachpuff","205,133,63,1":"peru","255,192,203,1":"pink","221,160,221,1":"plum","128,0,128,1":"purple","102,51,153,1":"rebeccapurple","255,0,0,1":"red","188,143,143,1":"rosybrown","65,105,225,1":"royalblue","139,69,19,1":"saddlebrown","250,128,114,1":"salmon","244,164,96,1":"sandybrown","46,139,87,1":"seagreen","255,245,238,1":"seashell","160,82,45,1":"sienna","192,192,192,1":"silver","135,206,235,1":"skyblue","106,90,205,1":"slateblue","112,128,144,1":"slategray","255,250,250,1":"snow","0,255,127,1":"springgreen","70,130,180,1":"steelblue","210,180,140,1":"tan","0,128,128,1":"teal","216,191,216,1":"thistle","255,99,71,1":"tomato","64,224,208,1":"turquoise","238,130,238,1":"violet","245,222,179,1":"wheat","255,255,255,1":"white","245,245,245,1":"whitesmoke","255,255,0,1":"yellow","154,205,50,1":"yellowgreen"};static FORMATS={RGBA:"RGBA",TEXT:"TEXT",HEX:"HEX",GRADIENT:"GRADIENT",COLOR:"COLOR",HSV:"HSVA"};static DEFAULT_TEMPERANCE=0;static SEARCH_STARTS={TOP_LEFT:"TOP_LEFT",BOTTOM_RIGHT:"BOTTOM_RIGHT"};static DEFAULT_SEARCH_START=Color.SEARCH_STARTS.TOP_LEFT;#rgba=null;#hsv=null;constructor(color,isChannel=!1){this._color=color instanceof Color?color.colorRaw:color||Color.DEFAULT_COLOR,this._format=this.getFormat(),this.#updateCache(),this._isChannel=isChannel}duplicate(gradientPositions){return this._format===Color.FORMATS.GRADIENT?new Color(this._color.duplicate(gradientPositions)):new Color([...this.#rgba])}#updateCache(){this._format===Color.FORMATS.GRADIENT?this.#rgba=this.#hsv=[]:(this.#rgba=this._format!==Color.FORMATS.RGBA?this.convertTo(Color.FORMATS.RGBA):[...this._color],this.#hsv=Color.convertTo(Color.FORMATS.HSV,this.#rgba))}static convertTo(format=Color.FORMATS.RGBA,color){let inputFormat=this.getFormat(color),convertedColor=color;return format===Color.FORMATS.RGBA?inputFormat===Color.FORMATS.HEX?convertedColor=Color.#hexToRgba(color):inputFormat===Color.FORMATS.TEXT?convertedColor=[...Color.CSS_COLOR_TO_RGBA_CONVERTIONS[color]]:inputFormat===Color.FORMATS.HSV&&(convertedColor=Color.#hsvToRgba(color)):format===Color.FORMATS.HEX?inputFormat===Color.FORMATS.RGBA?convertedColor=Color.#rgbaToHex(color):Color.#rgbaToHex(Color.convertTo(Color.FORMATS.RGBA,color)):format===Color.FORMATS.TEXT?convertedColor=inputFormat===Color.FORMATS.RGBA?Color.RGBA_TO_CSS_COLOR_CONVERTIONS[color.toString()]??color:Color.RGBA_TO_CSS_COLOR_CONVERTIONS[Color.convertTo(Color.FORMATS.RGBA,color).toString()]??color:format===Color.FORMATS.HSV&&(convertedColor=inputFormat===Color.FORMATS.RGBA?Color.#rgbaToHsv(color):Color.#rgbaToHsv(Color.convertTo(Color.FORMATS.RGBA,color))),convertedColor}convertTo(format=Color.FORMATS.RGBA,color=this._color){return Color.convertTo(format,color)}static#rgbaToHsv(rgba){let hue,r=rgba[0]/255,g=rgba[1]/255,b=rgba[2]/255,min=Math.min(r,g,b),max=Math.max(r,g,b),diff=max-min;return max===min?hue=0:(hue=max===r?(g-b)/diff:max===g?(b-r)/diff+2:(r-g)/diff+4,hue=(360+60*hue)%360),[hue,max&&diff/max*100,100*max]}static#hsvToRgba(hsva){let r,g,b,hue=hsva[0],sat=hsva[1]/100,bright=hsva[2]/100,chro=bright*sat,x=chro*(1-Math.abs(hue/60%2-1)),dc=bright-chro;return 0<=hue&&hue<60?(r=chro,g=x,b=0):60<=hue&&hue<120?(r=x,g=chro,b=0):120<=hue&&hue<180?(r=0,g=chro,b=x):180<=hue&&hue<240?(r=0,g=x,b=chro):240<=hue&&hue<300?(r=x,g=0,b=chro):(r=chro,g=0,b=x),[Math.round(255*(r+dc)),Math.round(255*(g+dc)),Math.round(255*(b+dc)),1]}static#rgbaToHex(rgba){return"#"+rgba.reduce(((a,b,i)=>a+(!i||i%3?b:Math.round(255*b)).toString(16).padStart(2,"0")),"")}static#hexToRgba(hex){return hex.padEnd(9,"F").match(/[a-z0-9]{2}/gi).reduce(((a,b,i)=>a.concat(parseInt(b,16)/(!i||i%3?1:255))),[])}static getFormat(color){return Array.isArray(color)?4===color.length?Color.FORMATS.RGBA:Color.FORMATS.HSV:color instanceof Color?Color.FORMATS.COLOR:color instanceof Gradient?Color.FORMATS.GRADIENT:color.includes("#")?Color.FORMATS.HEX:Color.FORMATS.TEXT}getFormat(color=this._color){return Color.getFormat(color)}static adjust(color){return color instanceof Color?color.isChannel?color:color.duplicate():new Color(color)}static formatRgba(arrayRgba){return Array.isArray(arrayRgba)?`rgba(${arrayRgba[0]}, ${arrayRgba[1]}, ${arrayRgba[2]}, ${arrayRgba[3]})`:null}static findFirstPos(canvas,color,useAlpha=!1,temperance=Color.DEFAULT_TEMPERANCE,searchStart=Color.DEFAULT_SEARCH_START,areaSize=[]){let x,y,yi,xi,currentR,currentG,currentB,width=areaSize[0]??canvas.width,height=areaSize[1]??canvas.height,data=canvas.ctx.getImageData(0,0,width,height).data,ow=4*width,r=color.r,g=color.g,b=color.b,a=255*color.a,br=r-temperance,bg=g-temperance,bb=b-temperance,ba=a-temperance,tr=r+temperance,tg=g+temperance,tb=b+temperance,ta=a+temperance,isSearchTL=searchStart===Color.SEARCH_STARTS.TOP_LEFT,startX=isSearchTL?0:width-1,endX=isSearchTL?width:-1,stepX=isSearchTL?1:-1,endY=isSearchTL?height:-1,stepY=isSearchTL?1:-1;for(y=isSearchTL?0:height-1;y!==endY;y+=stepY)for(yi=y*ow,x=startX;x!==endX;x+=stepX)if(xi=yi+4*x,currentR=data[xi],temperance){if(currentR>=br&&currentR<=tr&&(currentG=data[xi+1],currentB=data[xi+2],currentG>=bg&&currentG<=tg&&currentB>=bb&&currentB<=tb&&(!useAlpha||undefined>=ba&&undefined<=ta)))return[x,y]}else if(currentR===r&&data[xi+1]===g&&data[xi+2]===b&&(!useAlpha||data[xi+3]===a))return[x,y];return null}toString(){return"C"+this._color.toString()}get color(){let color=Color.formatRgba(this.#rgba);return this._format===Color.FORMATS.GRADIENT&&(color=this._color.gradient),color}get colorRaw(){return this._color}get isChannel(){return this._isChannel}get rgba(){return this.#rgba}get hsv(){return this.#hsv}get r(){return this.#rgba[0]}get g(){return this.#rgba[1]}get b(){return this.#rgba[2]}get a(){return this.#rgba[3]}get hue(){return this.#hsv[0]}get saturation(){return this.#hsv[1]}get brightness(){return this.#hsv[2]}set color(color){this._color=color,this._format=this.getFormat(),this.#updateCache()}set r(r){this.#rgba[0]=r}set g(g){this.#rgba[1]=g}set b(b){this.#rgba[2]=b}set a(a){this.#rgba[3]=a}set hue(hue){hue%=360,this.#hsv[0]!==hue&&(this.#hsv[0]=hue,this.#rgba=Color.#hsvToRgba(this.#hsv))}set saturation(saturation){saturation=saturation>100?100:saturation,this.#hsv[1]!==saturation&&(this.#hsv[1]=saturation,this.#rgba=Color.#hsvToRgba(this.#hsv))}set brightness(brightness){brightness=brightness>100?100:brightness,this.#hsv[2]!==brightness&&(this.#hsv[2]=brightness,this.#rgba=Color.#hsvToRgba(this.#hsv))}}class GridAssets{static D=[["t","-ar"],["r",1],["b","ar"],["l",-1],["tr","1-ar"],["br","ar+1"],["bl","ar-1"],["tl","-ar-1"]].reduce(((a,[b,d],i)=>(a.places.push([a[b]=1<<i,ar=>new Function("ar",`return ${d}`)(ar)]),a)),{places:[]});static get fontSource5x5(){const D=GridAssets.D;return{width:5,height:5,A:[[2,D.bl+D.br],[1,D.bl],[3,D.br],[0,D.r+D.b],[1,D.r],[2,D.r],[3,D.r],[4,D.b],[0,D.b],[4,D.b],[0],[4]],B:[[0,D.r+D.b],[,D.r],[,D.r],[,D.br],[0,D.b],[4,D.bl],[0,D.r+D.b],[,D.r],[,D.r],[,D.br],[0,D.b],[4,D.bl],[0,D.r],[,D.r],[,D.r],[]],C:[[1,D.r+D.bl],[,D.r],[,D.r],[],[0,D.b],[0,D.b],[0,D.br],[-1,D.r],[2,D.r],[,D.r],[]],D:[[0,D.r+D.b],[,D.r],[,D.r],[,D.br],[0,D.b],[4,D.b],[0,D.b],[4,D.b],[0,D.b],[4,D.bl],[0,D.r],[,D.r],[,D.r],[]],E:[[0,D.r+D.b],[,D.r],[,D.r],[,D.r],[],[0,D.b],[0,D.b+D.r],[,D.r],[,D.r],[,D.r],[0,D.b],[0,D.r],[,D.r],[,D.r],[,D.r],[]],F:[[0,D.r+D.b],[,D.r],[,D.r],[,D.r],[],[0,D.b],[0,D.b+D.r],[,D.r],[,D.r],[],[0,D.b],[0]],G:[[1,D.r+D.bl],[,D.r],[,D.r],[],[0,D.b],[0,D.b],[3,D.r],[4,D.b],[0,D.br],[4,D.b],[1,D.r],[,D.r],[,D.r],[]],H:[[0,D.r+D.b],[4,D.b],[0,D.b],[4,D.b],[0,D.b+D.r],[,D.r],[,D.r],[,D.r],[,D.b],[0,D.b],[4,D.b],[0],[4]],I:[[1,D.r],[,D.b+D.r],[],[2,D.b],[2,D.b],[2,D.b],[1,D.r],[,D.r],[]],J:[[1,D.r],[,D.r],[,D.b+D.r],[],[3,D.b],[3,D.b],[0,D.br],[3,D.bl],[1,D.r],[,D.r]],K:[[0,D.b],[3,D.bl],[0,D.b],[2,D.bl],[0,D.b+D.r],[,D.r+D.br],[0,D.b],[2,D.br],[0],[3,D.r]],L:[[0,D.b],[0,D.b],[0,D.b],[0,D.b],[0,D.r],[,D.r],[,D.r],[,D.r]],M:[[0,D.b+D.br],[4,D.b+D.bl],[0,D.b],[,D.br],[3,D.bl],[4,D.b],[0,D.b],[2],[4,D.b],[0,D.b],[4,D.b],[0],[4]],N:[[0,D.b+D.br],[4,D.b],[0,D.b],[,D.br],[4,D.b],[0,D.b],[2,D.br],[4,D.b],[0,D.b],[3,D.br],[4,D.b],[0],[4]],O:[[1,D.bl+D.r],[,D.r],[,D.br],[0,D.b],[4,D.b],[0,D.b],[4,D.b],[0,D.b+D.br],[4,D.b+D.bl],[1,D.r],[,D.r],[,D.r]],P:[[0,D.r+D.b],[,D.r],[,D.br],[0,D.b],[3,D.bl],[0,D.b+D.r],[,D.r],[],[0,D.b],[0]],Q:[[1,D.bl+D.r],[,D.r],[,D.br],[0,D.b],[4,D.b],[0,D.b],[4,D.b],[0,D.b+D.br],[3,D.br],[,D.bl],[1,D.r],[,D.r],[],[]],R:[[0,D.r+D.b],[,D.r],[,D.br],[0,D.b],[3,D.bl],[0,D.b+D.r],[,D.r+D.br],[],[0,D.b],[2,D.br],[0],[3]],S:[[1,D.r+D.bl],[,D.r],[,D.r],[],[0,D.br],[-1,D.r],[2,D.r],[,D.br],[-4,D.bl],[0,D.r+D.bl],[,D.r],[,D.r],[]],T:[[0,D.r],[,D.r],[,D.b+D.r],[,D.r],[],[2,D.b],[2,D.b],[2,D.b],[2]],U:[[0,D.r+D.b],[4,D.b],[0,D.b],[4,D.b],[0,D.b+D.r],[4,D.b],[0,D.br],[4,D.bl],[1,D.r],[,D.r],[,D.r]],V:[[0,D.r+D.b],[4,D.b],[0,D.b],[4,D.b],[0,D.br],[4,D.bl],[1,D.br],[3,D.bl],[2,D.r]],W:[[0,D.b+D.br],[4,D.b+D.bl],[0,D.b],[4,D.b],[0,D.b],[2,D.bl+D.br],[4,D.b],[0,D.b],[,D.bl],[3,D.br],[4,D.b],[0],[4]],X:[[0,D.br],[4,D.bl],[1,D.br],[3,D.bl],[2,D.br+D.bl],[1,D.bl],[3,D.br],[0],[4]],Y:[[0,D.br],[4,D.bl],[1,D.br],[3,D.bl],[2,D.b],[2,D.b],[2]],Z:[[0,D.r],[,D.r],[,D.r],[,D.r],[,D.bl],[3,D.bl],[2,D.bl],[1,D.bl],[0,D.r],[,D.r],[,D.r],[,D.r],[]]}}}class TypingDevice{constructor(){this._keysPressed=[]}setDown(e){const key=e.key.toUpperCase();this.isDown(key)||this._keysPressed.push({key:key,keyCode:e.keyCode})}setUp(e){const key=e.key.toUpperCase();this.isDown(key)&&(this._keysPressed=this._keysPressed.filter((v=>v.key!==key)))}isDown(key){return Boolean(this._keysPressed.find((v=>v.key===key.toUpperCase())))}hasKeysDown(){return Boolean(this._keysPressed.length)}get keysPressedRaw(){return this._keysPressed}get keysPressed(){return this._keysPressed.map((v=>v.key))}get keyCodesPressed(){return this._keysPressed.map((v=>v.keyCode))}set keysPressed(keysPressed){this._keysPressed=keysPressed}}class Mouse{static DEFAULT_MOUSE_DECELERATION=.8;static DEFAULT_MOUSE_MOVE_TRESHOLD=.1;static DEFAULT_MOUSE_ANGULAR_DECELERATION=.2;constructor(){this._valid=!1,this._x=null,this._y=null,this._lastX=null,this._lastY=null,this._dir=null,this._speed=null,this._clicked=!1,this._rightClicked=!1,this._scrollClicked=!1,this._extraForwardClicked=!1,this._extraBackClicked=!1}calcSpeed(deltaTime){isFinite(this._lastX)&&isFinite(this._lastY)&&deltaTime?(this._speed=this._speed*Mouse.DEFAULT_MOUSE_DECELERATION+CDEUtils.getDist(this._x,this._y,this._lastX,this._lastY)/deltaTime*(1-Mouse.DEFAULT_MOUSE_DECELERATION),this._speed<Mouse.DEFAULT_MOUSE_MOVE_TRESHOLD&&(this._speed=0)):this._speed=0,this._lastX=this._x,this._lastY=this._y}calcAngle(){const dx=this._x-this._lastX,dy=this._y-this._lastY;if(isFinite(dx)&&isFinite(dy)&&(dx||dy)){let diff=(360-CDEUtils.toDeg(Math.atan2(dy,dx)))%360-this._dir;diff+=360*(diff<-180)-360*(diff>180),this._dir=(this._dir+diff*Mouse.DEFAULT_MOUSE_ANGULAR_DECELERATION+360)%360}else this._dir=0}setMouseClicks(e){const v="mousedown"===e.type;0===e.button?this._clicked=v:1===e.button?this._scrollClicked=v:2===e.button?this._rightClicked=v:3===e.button?this._extraBackClicked=v:4===e.button&&(this._extraForwardClicked=v)}invalidate(){this._x=1/0,this._y=1/0}updatePos(e,offset){this._valid=!0,this._x=e.x-offset.x,this._y=e.y-offset.y}checkValid(){return this._x===1/0||null==this._x||this._y===1/0||null==this._y?this._valid=!1:this._valid?void 0:this._valid=!0}get valid(){return this._valid}get x(){return this._x}get y(){return this._y}get lastX(){return this._lastX}get lastY(){return this._lastY}get dir(){return this._dir}get speed(){return this._speed}get clicked(){return this._clicked}get scrollClicked(){return this._scrollClicked}get rightClicked(){return this._rightClicked}get extraBackClicked(){return this._extraBackClicked}get extraForwardClicked(){return this._extraForwardClicked}get pos(){return[this._x,this._y]}set valid(valid){return this._valid=valid}set lastX(_lastX){return this._lastX=_lastX}set lastY(_lastY){return this._lastY=_lastY}set dir(_dir){return this._dir=_dir}set speed(_speed){return this._speed=_speed}set clicked(_clicked){return this._clicked=_clicked}set scrollClicked(_scrollClicked){return this._scrollClicked=_scrollClicked}set rightClicked(_rightClicked){return this._rightClicked=_rightClicked}set extraBackClicked(_extraBackClicked){return this._extraBackClicked=_extraBackClicked}set extraForwardClicked(_extraForwardClicked){return this._extraForwardClicked=_extraForwardClicked}}class Line{static JOIN_TYPES={MITER:"miter",BEVEL:"bevel",ROUND:"round"};static CAP_TYPES={BUTT:"butt",SQUARE:"square",ROUND:"round"};static DEFAULT_WIDTH=2;static DEFAULT_CAP=Line.CAP_TYPES.ROUND;static DEFAULT_JOIN=Line.JOIN_TYPES.BEVEL;static DEFAULT_DASH=[];static DEFAULT_DASH_OFFSET=0;static getLine(startPos,endPos){return ctx=>{ctx.moveTo(...startPos),ctx.lineTo(...endPos)}}static getQuadCurve(startPos,endPos,controlPos){return ctx=>{ctx.moveTo(...startPos),ctx.quadraticCurveTo(...controlPos,...endPos)}}static getBeizerCurve(startPos,endPos,controlPos1,controlPos2){return controlPos1??=[startPos[1]+20,startPos[0]+20],controlPos2??=[endPos[1]+20,endPos[0]+20],ctx=>{ctx.moveTo(...startPos),ctx.bezierCurveTo(...controlPos1,...controlPos2,...endPos)}}static draw(ctx,line,color,lineWidth,lineJoin,lineCap,lineDash,lineDashOffset){color&&(ctx.strokeStyle=Color.formatRgba(color)??color.color),lineWidth&&(ctx.lineWidth=lineWidth),lineCap&&(ctx.lineCap=lineCap),lineJoin&&(ctx.lineJoin=lineJoin),lineDash&&(ctx.lineDash=lineDash),lineDashOffset&&(ctx.lineDashOffset=lineDashOffset),ctx.beginPath(),line(ctx),ctx.stroke()}}const CDE_CANVAS_DEFAULT_TIMEOUT_FN=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;class Canvas{static ELEMENT_ID_GIVER=0;static DEFAULT_MAX_DELTATIME_MS=130;static DEFAULT_MAX_DELTATIME=Canvas.DEFAULT_MAX_DELTATIME_MS/1e3;static DEFAULT_MAXDELAY_MULTIPLIER=.44;static DEFAULT_CANVAS_ACTIVE_AREA_PADDING=20;static DEFAULT_CVSDE_ATTR="_CVSDE";static DEFAULT_CVSFRAMEDE_ATTR="_CVSDE_F";static DEFAULT_CTX_SETTINGS={lineDashOffset:Line.DEFAULT_DASH_OFFSET,lineDash:Line.DEFAULT_DASH,lineJoin:Line.DEFAULT_JOIN,lineCap:Line.DEFAULT_CAP,imageSmoothingEnabled:!0,lineWidth:Line.DEFAULT_WIDTH,fillStyle:Color.DEFAULT_COLOR,stokeStyle:Color.DEFAULT_COLOR,willReadFrequently:!1};static DEFAULT_CANVAS_WIDTH=800;static DEFAULT_CANVAS_HEIGHT=800;static DEFAULT_CANVAS_STYLES={position:"absolute",width:"100%",height:"100%","background-color":"transparent",border:"none",outline:"none","pointer-events":"none !important","z-index":0,padding:"0 !important",margin:"0"};#lastFrame=0;#lastLimitedFrame=0;#maxTime=null;#frameSkipsOffset=null;#timeStamp=null;#cachedEls=[];constructor(cvs,loopingCallback,fpsLimit=null,cvsFrame,settings=Canvas.DEFAULT_CTX_SETTINGS,willReadFrequently=!1){this._cvs=cvs,this._frame=cvsFrame??cvs?.parentElement,this._cvs.setAttribute(Canvas.DEFAULT_CVSDE_ATTR,!0),this._frame.setAttribute(Canvas.DEFAULT_CVSFRAMEDE_ATTR,!0),this._ctx=this._cvs.getContext("2d",{willReadFrequently:willReadFrequently}),this._settings=this.updateSettings(settings),this._els={refs:[],defs:[]},this._looping=!1,this._loopingCallback=loopingCallback,this.fpsLimit=fpsLimit,this.#maxTime=this.#getMaxTime(fpsLimit),this._deltaTime=null,this._fixedTimeStamp=null,this._windowListeners=this.#initWindowListeners(),this._viewPos=[0,0];const frameCBR=this._frame?.getBoundingClientRect()??{width:Canvas.DEFAULT_CANVAS_WIDTH,height:Canvas.DEFAULT_CANVAS_HEIGHT};this.setSize(frameCBR.width,frameCBR.height),this.#initStyles(),this._typingDevice=new TypingDevice,this._mouse=new Mouse,this._offset=this.updateOffset()}#initStyles(){const style=document.createElement("style");style.appendChild(document.createTextNode(`[${Canvas.DEFAULT_CVSFRAMEDE_ATTR}]{position:relative !important;outline: none;}canvas[${Canvas.DEFAULT_CVSDE_ATTR}]{${Object.entries(Canvas.DEFAULT_CANVAS_STYLES).reduce(((a,b)=>a+`${b[0]}:${b[1]};`),"")}}`)),this._cvs.appendChild(style),this._frame.setAttribute("tabindex",0)}#initWindowListeners(){const onresize=()=>this.setSize(),onvisibilitychange=()=>{document.hidden||this.resetReferences()};return window.addEventListener("resize",onresize),window.addEventListener("visibilitychange",onvisibilitychange),[()=>window.removeEventListener("resize",onresize),()=>window.removeEventListener("visibilitychange",onvisibilitychange)]}updateOffset(){const{width:width,height:height,x:x,y:y}=this._cvs.getBoundingClientRect();return this._offset={x:Math.round(x+width-this.width+window.scrollX)+this._viewPos[0],y:Math.round(y+height-this.height+window.scrollY)+this._viewPos[1]}}startLoop(){this._looping||(this._looping=!0,this.#loop(0))}#loop(time){if(this.#timeStamp=time,this._fpsLimit){const timeDiff=time-this.#lastLimitedFrame;timeDiff>=this._fpsLimit&&(this.#loopCore(time),this.#lastFrame=time,this.#lastLimitedFrame=time-timeDiff%this._fpsLimit)}else this.#loopCore(time),this.#lastFrame=time;this._looping&&CDE_CANVAS_DEFAULT_TIMEOUT_FN(this.#loop.bind(this))}#loopCore(time){this.#calcDeltaTime(time);const delay=Math.abs(time-this.#timeStamp-1e3*this.deltaTime);0===this._fixedTimeStamp&&(this._fixedTimeStamp=time-this.#frameSkipsOffset),time&&this._fixedTimeStamp&&delay<this.#maxTime?(this._mouse.calcSpeed(this._deltaTime),this.clear(),this.draw(),CDEUtils.isFunction(this._loopingCallback)&&this._loopingCallback(),this._fixedTimeStamp=0):time&&(this._fixedTimeStamp=time-(this.#frameSkipsOffset+=this.#maxTime),this.#frameSkipsOffset+=this.#maxTime)}stopLoop(){this._looping=!1}#calcDeltaTime(time=0){this._deltaTime=Math.min((time-this.#lastFrame)/1e3,this.#maxTime)}#getMaxTime(fpsLimit){return fpsLimit?fpsLimit<7?(1.05*(14-fpsLimit))**3*Canvas.DEFAULT_MAXDELAY_MULTIPLIER:Math.max((360-fpsLimit)*Canvas.DEFAULT_MAXDELAY_MULTIPLIER,50):Canvas.DEFAULT_MAX_DELTATIME_MS}updateCachedAllEls(){this.#cachedEls=this.refs.concat(this._els.refs.flatMap((source=>source.asSource))).concat(this._els.defs)}draw(){const els=this.#cachedEls,els_ll=els.length;for(let i=0;i<els_ll;i++){const el=els[i];el.draw&&(el.alwaysActive||!el.initialized||this.isWithin(el.pos,Canvas.DEFAULT_CANVAS_ACTIVE_AREA_PADDING))&&el.draw(this._ctx,this.timeStamp,this._deltaTime)}}clear(pos1=[0,0],pos2=[this.width,this.height]){this._ctx.clearRect(...pos1,...pos2)}resetReferences(){this.refs.filter((ref=>ref.fragile)).forEach((r=>r.reset()))}resetTransformations(){this.ctx.setTransform(1,0,0,1,0,0)}moveViewBy(pos){let[x,y]=pos;this._ctx.translate(x=CDEUtils.isDefined(x)&&isFinite(x)?x:0,y=CDEUtils.isDefined(y)&&isFinite(y)?y:0),this._viewPos=[this._viewPos[0]+x,this._viewPos[1]+y],this.updateOffset()}moveViewAt(pos){let[x,y]=pos;this.resetTransformations(),this._ctx.translate(x=CDEUtils.isDefined(x)&&isFinite(x)?x:0,y=CDEUtils.isDefined(y)&&isFinite(y)?y:0),this._viewPos=[x,y],this.updateOffset()}setSize(w,h,forceCSSupdate){const{width:width,height:height}=this._frame.getBoundingClientRect();this._cvs.width=w??width,this._cvs.height=h??height,forceCSSupdate&&(this._frame.style.width=this.width+"px",this._frame.style.height=this.height+"px"),this.updateSettings(),this.updateOffset()}updateSettings(settings){const st=settings||this._settings;return Object.entries(st).forEach((s=>this._ctx[s[0]]=s[1])),this._settings=st}add(objs,isDef,active=!0){const l=objs.length??1;for(let i=0;i<l;i++){const obj=objs[i]??objs;isDef?obj.parent=this:obj.cvs=this,CDEUtils.isFunction(obj.initialize)&&obj.initialize(),active&&this._els[isDef?"defs":"refs"].push(obj)}this.updateCachedAllEls()}remove(id){this._els.defs=this._els.defs.filter((el=>el.id!==id)),this._els.refs=this._els.refs.filter((source=>source.id!==id)),this.updateCachedAllEls()}get(id){return this.allEls.find((el=>el.id===id))}getObjs(instance){return this._els.defs.filter((x=>x instanceof instance))}#mouseMovements(cb,e){const r_ll=this.refs.length;for(let i=0;i<r_ll;i++){const ref=this.refs[i];ref.ratioPosCB||!1===ref.ratioPosCB||(ref.ratioPos=this._mouse.pos)}CDEUtils.isFunction(cb)&&cb(e,this._mouse),this._mouse.checkValid()}setmousemove(cb){const onmousemove=e=>{this._mouse.updatePos(e,this._offset),this._mouse.calcAngle(),this.#mouseMovements(cb,e)};return this._frame.addEventListener("mousemove",onmousemove),()=>this._frame.removeEventListener("mousemove",onmousemove)}setmouseleave(cb){const onmouseleave=e=>{this._mouse.invalidate(),this.#mouseMovements(cb,e)};return this._frame.addEventListener("mouseleave",onmouseleave),()=>this._frame.removeEventListener("mouseleave",onmouseleave)}#mouseClicks(cb,e){this._mouse.setMouseClicks(e),CDEUtils.isFunction(cb)&&cb(e,this._mouse)}setmousedown(cb){const onmousedown=e=>this.#mouseClicks(cb,e);return this._frame.addEventListener("mousedown",onmousedown),()=>this._frame.removeEventListener("mousedown",onmousedown)}setmouseup(cb){const onmouseup=e=>this.#mouseClicks(cb,e);return this._frame.addEventListener("mouseup",onmouseup),()=>this._frame.removeEventListener("mouseup",onmouseup)}setkeydown(cb,global){const onkeydown=e=>{this._typingDevice.setDown(e),CDEUtils.isFunction(cb)&&cb(e,this._typingDevice)},element=global?document:this._frame;return element.addEventListener("keydown",onkeydown),()=>element.removeEventListener("keydown",onkeydown)}setkeyup(cb,global){const onkeyup=e=>{this._typingDevice.setUp(e),CDEUtils.isFunction(cb)&&cb(e,this._typingDevice)},element=global?document:this._frame;return element.addEventListener("keyup",onkeyup),()=>element.removeEventListener("keyup",onkeyup)}getCenter(){return[this.width/2,this.height/2]}isWithin(pos,padding=0){const[x,y]=pos;return x>=-padding&&x<=this.width+padding&&y>=-padding&&y<=this.height+padding}get cvs(){return this._cvs}get frame(){return this._frame}get ctx(){return this._ctx}get width(){return this._cvs.width}get height(){return this._cvs.height}get settings(){return this._settings}get loopingCallback(){return this._loopingCallback}get looping(){return this._looping}get deltaTime(){return this._deltaTime}get windowListeners(){return this._windowListeners}get timeStamp(){return this._fixedTimeStamp||this.#timeStamp}get timeStampRaw(){return this.#timeStamp}get els(){return this._els}get mouse(){return this._mouse}get typingDevice(){return this._typingDevice}get keyboard(){return this._typingDevice}get offset(){return this._offset}get defs(){return this._els.defs}get refs(){return this._els.refs}get allDefsAndRefs(){return this.defs.concat(this.refs)}get allEls(){return this.allDefsAndRefs.flatMap((x=>x.dots||x))}get fpsLimitRaw(){return this._fpsLimit}get fpsLimit(){return null!=this._fpsLimit&&isFinite(this._fpsLimit)?1/(this._fpsLimit/1e3):null}get maxTime(){return this.#maxTime}get viewPos(){return this._viewPos}set loopingCallback(_cb){this._loopingCallback=_cb}set width(w){this.setSize(w,null)}set height(h){this.setSize(null,h)}set offset(offset){this._offset=offset}set fpsLimit(fpsLimit){this._fpsLimit=CDEUtils.isDefined(fpsLimit)&&isFinite(fpsLimit)?1e3/Math.max(fpsLimit,0):null,this.#maxTime=this.#getMaxTime(fpsLimit)}}class Anim{static ANIM_ID_GIVER=0;static DEFAULT_DURATION=1e3;constructor(animation,duration,easing,endCallback){this._id=Anim.ANIM_ID_GIVER++,this._animation=animation,this._duration=duration??Anim.DEFAULT_DURATION,this._easing=easing||Anim.linear,this._endCallback=endCallback,this._startTime=null,this._progress=0,this._playCount=0}getFrame(time,deltaTime){const isInfinite=-1===Math.sign(this._duration);this._playCount&&!isInfinite||(this._startTime?time<this._startTime+Math.abs(this._duration)?(this._progress=this._easing((time-this._startTime)/Math.abs(this._duration)),this._animation(this._progress,this._playCount,deltaTime,this.progress)):isInfinite?this.reset(!0,deltaTime):this.end(deltaTime):this._startTime=time)}end(deltaTime){this._animation(1,this._playCount++,deltaTime,1),CDEUtils.isFunction(this._endCallback)&&this._endCallback()}reset(isInfiniteReset,deltaTime){isInfiniteReset?this._animation(1,this._playCount++,deltaTime,1):this._playCount=0,this._progress=0,this._startTime=null}get id(){return this._id}get animation(){return this._animation}get duration(){return this._duration}get easing(){return this._easing}get endCallback(){return this._endCallback}get startTime(){return this._startTime}get progress(){return CDEUtils.clamp(this._progress,0,1)}get progressRaw(){return this._progress}get playCount(){return this._playCount}set animation(_animation){return this._animation=_animation}set duration(_duration){return this._duration=_duration}set easing(_easing){return this._easing=_easing}set endCallback(_endCallback){return this._endCallback=_endCallback}static easeInSine=x=>1-Math.cos(x*Math.PI/2);static easeOutSine=x=>Math.sin(x*Math.PI/2);static easeInOutSine=x=>-(Math.cos(Math.PI*x)-1)/2;static easeInCubic=x=>x*x*x;static easeOutCubic=x=>1-Math.pow(1-x,3);static easeInOutCubic=x=>x<.5?4*x*x*x:1-Math.pow(-2*x+2,3)/2;static easeInQuint=x=>x*x*x*x*x;static easeOutQuint=x=>1-Math.pow(1-x,5);static easeInOutQuint=x=>x<.5?16*x*x*x*x*x:1-Math.pow(-2*x+2,5)/2;static easeInCirc=x=>1-Math.sqrt(1-Math.pow(x,2));static easeOutCirc=x=>Math.sqrt(1-Math.pow(x-1,2));static easeInOutCirc=x=>x<.5?(1-Math.sqrt(1-Math.pow(2*x,2)))/2:(Math.sqrt(1-Math.pow(-2*x+2,2))+1)/2;static easeInElastic=x=>0===x?0:1===x?1:-Math.pow(2,10*x-10)*Math.sin((10*x-10.75)*(2*Math.PI/3));static easeOutElastic=x=>0===x?0:1===x?1:Math.pow(2,-10*x)*Math.sin((10*x-.75)*(2*Math.PI/3))+1;static easeInOutElastic=x=>0===x?0:1===x?1:x<.5?-Math.pow(2,20*x-10)*Math.sin((20*x-11.125)*(2*Math.PI)/4.5)/2:Math.pow(2,-20*x+10)*Math.sin((20*x-11.125)*(2*Math.PI)/4.5)/2+1;static easeInQuad=x=>x*x;static easeOutQuad=x=>1-(1-x)*(1-x);static easeInOutQuad=x=>x<.5?2*x*x:1-Math.pow(-2*x+2,2)/2;static easeInQuart=x=>x*x*x*x;static easeOutQuart=x=>1-Math.pow(1-x,4);static easeInOutQuart=x=>x<.5?8*x*x*x*x:1-Math.pow(-2*x+2,4)/2;static easeInExpo=x=>0===x?0:Math.pow(2,10*x-10);static easeOutExpo=x=>1===x?1:1-Math.pow(2,-10*x);static easeInOutExpo=x=>0===x?0:1===x?1:x<.5?Math.pow(2,20*x-10)/2:(2-Math.pow(2,-20*x+10))/2;static easeInBack=x=>2.70158*x*x*x-1.70158*x*x;static easeOutBack=x=>1+2.70158*Math.pow(x-1,3)+1.70158*Math.pow(x-1,2);static easeInOutBack=x=>x<.5?Math.pow(2*x,2)*(7.189819*x-2.5949095)/2:(Math.pow(2*x-2,2)*(3.5949095*(2*x-2)+2.5949095)+2)/2;static easeInBounce=x=>1-Anim.easeOutBounce(1-x);static easeOutBounce=x=>x<1/2.75?7.5625*x*x:x<2/2.75?7.5625*(x-=1.5/2.75)*x+.75:x<2.5/2.75?7.5625*(x-=2.25/2.75)*x+.9375:7.5625*(x-=2.625/2.75)*x+.984375;static easeInOutBounce=x=>x<.5?(1-Anim.easeOutBounce(1-2*x))/2:(1+Anim.easeOutBounce(2*x-1))/2;static linear=x=>x}class Obj{static DEFAULT_POS=[0,0];static DEFAULT_RADIUS=5;static ABSOLUTE_ANCHOR="ABSOLUTE_ANCHOR";#lastAnchorPos=[0,0];constructor(pos,radius,color,setupCB,anchorPos,alwaysActive){this._id=Canvas.ELEMENT_ID_GIVER++,this._initPos=pos||[0,0],this._pos=[0,0],this._initRadius=radius,this._radius=this._initRadius,this._initColor=color,this._color=this._initColor,this._setupCB=setupCB,this._setupResults=null,this._anchorPos=anchorPos,this._alwaysActive=alwaysActive??null,this._anims={backlog:[],currents:[]},this._initialized=!1}initialize(){this._pos=this.getInitPos()||Obj.DEFAULT_POS,this._radius=this.getInitRadius()??Obj.DEFAULT_RADIUS,this.color=this.getInitColor(),this.setAnchoredPos(),CDEUtils.isFunction(this._setupCB)&&(this._setupResults=this._setupCB(this,this.parent))}getInitColor(){return CDEUtils.isFunction(this._initColor)?this._initColor(this.ctx??this.parent.ctx,this):this._initColor||null}getInitRadius(){return CDEUtils.isFunction(this._initRadius)?this._initRadius(this.parent||this,this):this._initRadius??null}getInitPos(){return CDEUtils.isFunction(this._initPos)?[...this._initPos(this._cvs??this.parent,this)]:[...this.adjustPos(this._initPos)]}setAnchoredPos(){if(this.hasAnchorPosChanged){const anchorPos=this.anchorPos;this.relativeX+=anchorPos[0]-this.lastAnchorPos[0],this.relativeY+=anchorPos[1]-this.lastAnchorPos[1],this.lastAnchorPos=anchorPos}}draw(ctx,time,deltaTime){this.setAnchoredPos();let anims=this._anims.currents;this._anims.backlog[0]&&(anims=[...anims,this._anims.backlog[0]]);const a_ll=anims.length;for(let i=0;i<a_ll;i++)anims[i].getFrame(time,deltaTime)}isWithin(pos,circularDetection){const[x,y]=pos;return CDEUtils.isDefined(x)&&CDEUtils.isDefined(y)&&(circularDetection?CDEUtils.getDist(x,y,this.x,this.y)<=this.radius*(1==+circularDetection?1.025:+circularDetection):x>=this.left&&x<=this.right&&y>=this.top&&y<=this.bottom)}posDistances(pos=this._pos){const[x,y]=pos,cw=this._cvs.width,ch=this._cvs.height;return[y-this.height/2,cw-(x+this.width/2),ch-(y+this.height/2),x-this.width/2]}moveAt(pos){const[x,y]=pos;CDEUtils.isDefined(x)&&isFinite(x)&&(this.x=x),CDEUtils.isDefined(y)&&isFinite(y)&&(this.y=y)}moveBy(pos){const[x,y]=pos;CDEUtils.isDefined(x)&&isFinite(x)&&(this.x+=x),CDEUtils.isDefined(y)&&isFinite(y)&&(this.y+=y)}moveTo(pos,time=1e3,easing=Anim.easeInOutQuad,initPos=[this.x,this.y],isUnique=!0,force=!0){const[ix,iy]=initPos,[fx,fy]=this.adjustPos(pos),dx=fx-ix,dy=fy-iy;return this.playAnim(new Anim((prog=>{this.x=ix+dx*prog,this.y=iy+dy*prog}),time,easing),isUnique,force)}follow(duration,easing,action,progressSeparations){let[ix,iy]=this._pos,ps_ll=progressSeparations.length-1;this.playAnim(new Anim((prog=>{let progSep=null;prog<0&&(prog=0);for(let i=ps_ll;i>=0;i--){let progressSepIndex=progressSeparations[i];if(progressSepIndex[0]<=prog){progSep=progressSepIndex;break}}const[nx,ny]=progSep[1](prog,prog-progSep[0],this,ix,iy);this.moveAt([ix+nx,iy+ny]),CDEUtils.isFunction(action)&&action(prog,this)}),duration,easing))}addForce(distance,dir,time=1e3,easing=Anim.easeInOutQuad,isUnique=!0,animForce=!0){let rDir=CDEUtils.toRad(dir),ix=this.x,iy=this.y,dx=CDEUtils.getAcceptableDiff(distance*Math.cos(rDir),CDEUtils.DEFAULT_ACCEPTABLE_DIFFERENCE),dy=CDEUtils.getAcceptableDiff(distance*Math.sin(rDir),CDEUtils.DEFAULT_ACCEPTABLE_DIFFERENCE);return this.playAnim(new Anim((prog=>{this.x=ix+dx*prog,this.y=iy-dy*prog}),time,easing),isUnique,animForce)}playAnim(anim,isUnique,force){isUnique&&this.currentBacklogAnim&&force&&(this.currentBacklogAnim.end(),this._anims.backlog.addAt(anim,0));const initEndCB=anim.endCallback;return anim.endCallback=()=>{isUnique?this._anims.backlog.shift():this._anims.currents=this._anims.currents.filter((a=>a.id!==anim.id)),CDEUtils.isFunction(initEndCB)&&initEndCB()},this._anims[isUnique?"backlog":"currents"].push(anim),anim}adjustPos(pos){let[x,y]=pos;return CDEUtils.isDefined(x)||(x=this.x??0),CDEUtils.isDefined(y)||(y=this.y??0),[x,y]}get id(){return this._id}get x(){return this._pos[0]}get y(){return this._pos[1]}get pos(){return this._pos}get pos_(){return[...this._pos]}get relativeX(){return this.x-this.anchorPos[0]}get relativeY(){return this.y-this.anchorPos[1]}get relativePos(){return[this.relativeX,this.relativeY]}get radius(){return this._radius}get top(){return this.y-this._radius}get bottom(){return this.y+this._radius}get right(){return this.x+this._radius}get left(){return this.x-this._radius}get stringPos(){return this.x+","+this.y}get initPos(){return this._initPos}get width(){return 2*this._radius}get height(){return 2*this._radius}get currentBacklogAnim(){return this._anims.backlog[0]}get anims(){return this._anims}get setupCB(){return this._setupCB}get setupResults(){return this._setupResults}get colorObject(){return this._color}get colorRaw(){return this._color.colorRaw}get color(){return this._color?.color}get initColor(){return this._initColor}get initRadius(){return this._initRadius}get rgba(){return this.colorObject.rgba}get r(){return this.colorObject.r}get g(){return this.colorObject.g}get b(){return this.colorObject.b}get a(){return this.colorObject.a}get hsv(){return this.colorObject.hsv}get hue(){return this.colorObject.hue}get saturation(){return this.colorObject.saturation}get brightness(){return this.colorObject.brightness}get initialized(){return this._initialized}get alwaysActive(){return this._alwaysActive}get anchorPosRaw(){return this._anchorPos}get anchorPos(){if(this._anchorPos){if(this._anchorPos instanceof Obj)return this._anchorPos.pos_;if(this._anchorPos===Obj.ABSOLUTE_ANCHOR)return[0,0];if(CDEUtils.isFunction(this._anchorPos)){const res=this._anchorPos(this,this._cvs??this.parent);return[...res?.pos_||res||[0,0]]}return this._anchorPos}return this._cvs||this.parent instanceof Canvas?[0,0]:this.parent?.pos_}get lastAnchorPos(){return this.#lastAnchorPos}get hasAnchorPosChanged(){return this.#lastAnchorPos?.toString()!==this.anchorPos?.toString()}set x(x){this._pos[0]=x}set y(y){this._pos[1]=y}set pos(pos){this._pos=pos}set relativeX(x){this._pos[0]=this.anchorPos[0]+x}set relativeY(y){this._pos[1]=this.anchorPos[1]+y}set relativePos(pos){this.relativeX=pos[0],this.relativeY=pos[1]}set radius(radius){this._radius=radius<0?0:radius}set color(color){if(this._color?.colorRaw?.toString()!==color?.toString()||!this._color){const potentialGradient=color?.colorRaw||color;potentialGradient?.positions===Gradient.PLACEHOLDER&&((color=potentialGradient.duplicate()).initPositions=this),this._color=Color.adjust(color)}}set setupCB(cb){this._setupCB=cb}set setupResults(value){this._setupResults=value}set r(r){this.colorObject.r=r}set g(g){this.colorObject.g=g}set b(b){this.colorObject.b=b}set a(a){this.colorObject.a=a}set hue(hue){this.colorObject.hue=hue}set saturation(saturation){this.colorObject.saturation=saturation}set brightness(brightness){this.colorObject.brightness=brightness}set initPos(initPos){this._initPos=initPos}set initRadius(initRadius){this._initRadius=initRadius}set initColor(initColor){this._initColor=initColor}set initialized(init){this._initialized=init}set alwaysActive(alwaysActive){this._alwaysActive=alwaysActive}set anchorPos(anchorPos){this.anchorPosRaw=anchorPos}set anchorPosRaw(anchorPos){this._anchorPos=anchorPos}set lastAnchorPos(l){this.#lastAnchorPos=l}}class Shape extends Obj{static DEFAULT_LIMIT=100;constructor(pos,dots,radius,color,limit,drawEffectCB,ratioPosCB,setupCB,anchorPos,alwaysActive,fragile){super(pos,radius??Obj.DEFAULT_RADIUS,color||Color.DEFAULT_COLOR,setupCB,anchorPos,alwaysActive),this._cvs=null,this._limit=limit||Shape.DEFAULT_LIMIT,this._initDots=dots,this._dots=[],this._ratioPos=[1/0,1/0],this._drawEffectCB=drawEffectCB,this._ratioPosCB=ratioPosCB,this._fragile=fragile||!1,this._rotation=0,this._scale=[1,1]}initialize(){this._pos=this.getInitPos(),this.setAnchoredPos(),Array.isArray(this._initDots)||this._initDots instanceof Dot?this.add(this._initDots):CDEUtils.isFunction(this._initDots)?this.add(this._initDots(this,this._cvs)):"string"==typeof this._initDots&&this.add(this.createFromString(this._initDots)),this.setRadius(this.getInitRadius(),!0),this.setColor(this.getInitColor(),!0),CDEUtils.isFunction(this._setupCB)&&(this._setupResults=this._setupCB(this,this?.parent)),this.initialized=!0}draw(ctx,time,deltaTime){super.draw(ctx,time,deltaTime),CDEUtils.isFunction(this._ratioPosCB)&&(this._ratioPos=this._ratioPosCB(this))}duplicate(){return this.initialized?new Shape(this.pos_,this._dots.map((d=>d.duplicate())),this.radius,this.colorObject.duplicate(),this.limit,this._drawEffectCB,this._ratioPosCB,this.setupCB,this._fragile):null}add(dot){this._dots.push(...[dot].flat().map((dot=>(null==dot.initColor&&(dot.initColor=this.colorObject),null==dot.initRadius&&(dot.initRadius=this._radius),null==dot.alwaysActive&&(dot.alwaysActive=this._alwaysActive),dot.parent=this,dot.initialize(),dot)))),this._cvs.updateCachedAllEls()}removeDot(idOrDot){this._dots=this._dots.filter((dot=>dot.id!==(idOrDot?.id??idOrDot))),this._cvs.updateCachedAllEls()}remove(){this._cvs.remove(this._id),this._cvs.updateCachedAllEls()}static generate(yTrajectory,startOffset,length,gapX,yModifier,genCB){yTrajectory??=x=>0,startOffset??=[0,0],length??=100,gapX??=1,yModifier??=[-50,50];let dots=[],lastDot=null;for(let x=0;x<=length;x+=CDEUtils.getValueFromRange(gapX)){let dot=new Dot([startOffset[0]+x,startOffset[1]+CDEUtils.getValueFromRange(yModifier)+yTrajectory(x)]);lastDot&&CDEUtils.isFunction(genCB)&&genCB(dot,lastDot),dots.push(dot),lastDot=dot}return dots}createFromString(str,topLeftPos=[0,0],gaps=[25,25],dotChar="o"){const dots=[];return str.split("\n").filter((x=>x)).forEach(((x,i)=>{let[atX,atY]=topLeftPos;atY+=i*gaps[1],[...x].forEach((c=>{c===dotChar&&dots.push(new Dot([atX+gaps[0]/2,atY+gaps[1]/2])),atX+=gaps[0]}))})),dots}setRadius(radius=this._radius,onlyReplaceDefaults){this._radius=radius;const d_ll=this._dots.length;for(let i=0;i<d_ll;i++){const dot=this._dots[i];onlyReplaceDefaults&&null==dot.initRadius?(dot.radius=radius,dot.initRadius=radius):onlyReplaceDefaults||(dot.radius=radius,dot.initRadius||(dot.initRadius=radius))}}setColor(color=this._color,onlyReplaceDefaults){this.color=color;const d_ll=this._dots.length;for(let i=0;i<d_ll;i++){const dot=this._dots[i];onlyReplaceDefaults&&!dot.initColor?(dot.color=color,dot.initColor=color):onlyReplaceDefaults||(dot.color=color,dot.initColor||(dot.initColor=color))}}addForce(force,dir,time=1e3,easing=Anim.easeInOutQuad,isUnique=!0,animForce=!0){const rDir=CDEUtils.toRad(dir),ix=this.x,iy=this.y,dx=CDEUtils.getAcceptableDiff(force*Math.cos(rDir),CDEUtils.DEFAULT_ACCEPTABLE_DIFFERENCE),dy=CDEUtils.getAcceptableDiff(force*Math.sin(rDir),CDEUtils.DEFAULT_ACCEPTABLE_DIFFERENCE);return this.playAnim(new Anim((prog=>{this.moveAt([ix+dx*prog,iy-dy*prog])}),time,easing),isUnique,animForce)}rotateBy(deg,centerPos=this.pos){const[cx,cy]=centerPos;this._dots.forEach((dot=>{const x=dot.x-cx,y=dot.y-cy,cosV=Math.cos(CDEUtils.toRad(deg)),sinV=Math.sin(CDEUtils.toRad(deg));dot.x=x*cosV-y*sinV+cx,dot.y=x*sinV+y*cosV+cy})),this._rotation=(this._rotation+deg)%360}rotateAt(deg,centerPos=this.pos){this.rotateBy(360-(this._rotation-deg),centerPos)}rotateTo(deg,time=1e3,easing=Anim.easeInOutQuad,centerPos=this.pos,isUnique=!0,force=!0){const ir=this._rotation,dr=deg-this._rotation;return this.playAnim(new Anim((prog=>{this.rotateAt(ir+dr*prog,centerPos)}),time,easing),isUnique,force)}scaleBy(scale,centerPos=this.pos){const[scaleX,scaleY]=scale,[cx,cy]=centerPos;this._dots.forEach((dot=>{dot.x=(dot.x-cx)*scaleX+cx,dot.y=(dot.y-cy)*scaleY+cy})),this._scale=[this._scale[0]*scaleX,this._scale[1]*scaleY]}scaleAt(scale,centerPos=this.pos){const dsX=scale[0]/this._scale[0],dsY=scale[1]/this._scale[1];this.scaleBy([dsX,dsY],centerPos)}scaleTo(scale,time=1e3,easing=Anim.easeInOutQuad,centerPos=this.pos,isUnique=!0,force=!0){const is=this._scale,dsX=scale[0]-this._scale[0],dsY=scale[1]-this._scale[1];return this.playAnim(new Anim((prog=>{this.scaleAt([is[0]+dsX*prog,is[1]+dsY*prog],centerPos)}),time,easing),isUnique,force)}isWithin(pos){const d_ll=this.dots.length;if(d_ll>2){const permimeter=new Path2D;permimeter.moveTo(...this.dots[0].pos);for(let i=1;i<d_ll;i++)permimeter.lineTo(...this.dots[i].pos);return permimeter.closePath(),this.ctx.isPointInPath(permimeter,...pos)}return!1}getCenter(){const rangeX=CDEUtils.getMinMax(this.dots,"x"),rangeY=CDEUtils.getMinMax(this.dots,"y");return[rangeX[0]+(rangeX[1]-rangeX[0])/2,rangeY[0]+(rangeY[1]-rangeY[0])/2]}clear(){this._dots=[],this._cvs.updateCachedAllEls()}reset(){this._initDots&&(this.clear(),this.initialize())}get cvs(){return this._cvs}get ctx(){return this._cvs.ctx}get dots(){return this._dots}get dotsPos(){return this._dots.map((dot=>dot.pos))}get limit(){return this._limit}get initDots(){return this._initDots}get drawEffectCB(){return this._drawEffectCB}get ratioPos(){return this._ratioPos}get ratioPosCB(){return this._ratioPosCB}get rotation(){return this._rotation}get rotation(){return this._scale}get lastDotsPos(){return this._lastDotsPos}get dotsPositions(){let currentDotPos="",d_ll=this.dots.length;for(let i=0;i<d_ll;i++)currentDotPos+=this.dots[i].stringPos;return currentDotPos}get firstDot(){return this._dots[0]}get secondDot(){return this._dots[1]}get thirdDot(){return this._dots[2]}get asSource(){return this._dots}set cvs(cvs){this._cvs=cvs}set ratioPos(ratioPos){this._ratioPos=ratioPos}set drawEffectCB(cb){this._drawEffectCB=cb}set ratioPosCB(cb){this._ratioPosCB=cb}set lastDotsPos(ldp){this._lastDotsPos=ldp}set limit(limit){this._limit=limit}}class Gradient{static PLACEHOLDER="PLACERHOLDER";static TYPES={LINEAR:"Linear",RADIAL:"Radial",CONIC:"Conic"};static DEFAULT_TYPE=Gradient.TYPES.LINEAR;#lastDotsPos=null;#lastRotation=null;#lastDotPos=null;constructor(ctx,positions,colorStops,type,rotation){this._ctx=ctx,this._initPositions=positions,this._type=type||Gradient.DEFAULT_TYPE,this._positions=this.getAutomaticPositions()??this._initPositions,this._colorStops=colorStops.map((([stop,color])=>[stop,Color.adjust(color)])),this._rotation=rotation??0,this._gradient=null,this.updateGradient()}duplicate(positions=this._positions){return new Gradient(this._ctx,Array.isArray(positions)?[...positions]:positions,[...this._colorStops],this._type,this._rotation)}getAutomaticPositions(obj=this._initPositions,optimize=!0){if(obj instanceof Shape){if(this.#hasShapeChanged(obj)||!optimize){const rangeX=CDEUtils.getMinMax(obj.dots,"x"),rangeY=CDEUtils.getMinMax(obj.dots,"y"),smallestX=rangeX[0],smallestY=rangeY[0],biggestX=rangeX[1],biggestY=rangeY[1],cx=smallestX+(biggestX-smallestX)/2,cy=smallestY+(biggestY-smallestY)/2;return this._type===Gradient.TYPES.LINEAR?this.#getLinearPositions(smallestX-cx,smallestY-cy,biggestX-cx,biggestY-cy,cx,cy):this._type===Gradient.TYPES.RADIAL?this.#getRadialPositions(cx,cy,Math.max(biggestX-smallestX,biggestY-smallestY)):obj.getCenter()}return this._positions}return obj instanceof Dot&&(this.#hasDotChanged(obj)||!optimize)?this._type===Gradient.TYPES.LINEAR?this.#getLinearPositions(obj.left-obj.x,obj.top-obj.y,obj.right-obj.x,obj.bottom-obj.y,obj.x,obj.y):this._type===Gradient.TYPES.RADIAL?this.#getRadialPositions(obj.x,obj.y,obj.radius):obj.pos_:this._positions}#getLinearPositions(x,y,x2,y2,cx,cy){const cosV=Math.cos(CDEUtils.toRad(this._rotation)),sinV=Math.sin(CDEUtils.toRad(this._rotation));return[[x*cosV-y*sinV+cx,x*sinV+y*cosV+cy],[x2*cosV-y2*sinV+cx,x2*sinV+y2*cosV+cy]]}#getRadialPositions(x,y,coverRadius){return[[x,y,coverRadius],[x,y,.25*coverRadius]]}#hasShapeChanged(shape){const currentDotsPos=shape.dotsPositions;return(this.#lastRotation!==this._rotation||currentDotsPos!==this.#lastDotsPos)&&(this.#lastDotsPos=currentDotsPos,this.#lastRotation=this._rotation,!0)}#hasDotChanged(dot){const currentDotPos=dot.stringPos;return(this.#lastRotation!==this._rotation||currentDotPos!==this.#lastDotPos)&&(this.#lastDotPos=currentDotPos,this.#lastRotation=this._rotation,!0)}updateGradient(){if(this._initPositions!==Gradient.PLACEHOLDER){this._positions=this.getAutomaticPositions(),this._type===Gradient.TYPES.CONIC?this._gradient=this._ctx.createConicGradient(CDEUtils.toRad(this._rotation),...this._positions):this._gradient=this._ctx[`create${this._type}Gradient`](...this._positions[0],...this._positions[1]);const cs_ll=this._colorStops.length;for(let i=0;i<cs_ll;i++)this._gradient.addColorStop(this._colorStops[i][0],this._colorStops[i][1].color);return this._gradient}}toString(){return"G"+this._positions+this._colorStops+this._type+this._rotation}get ctx(){return this._ctx}get initPositions(){return this._initPositions}get positions(){return this._positions}get type(){return this._type}get colorStops(){return this._colorStops}get rotation(){return this._rotation}get gradient(){return(this._initPositions instanceof Shape||this._initPositions instanceof Dot)&&this.updateGradient(),this._gradient}set ctx(_ctx){this._ctx=_ctx}set initPositions(initPositions){this._initPositions=initPositions}set positions(_positions){this._positions=_positions}set colorStops(_colorStops){this._colorStops=_colorStops.map((([stop,color])=>[stop,Color.adjust(color)]))}set type(type){this._type=type}set rotation(deg){this._rotation=deg}}class FilledShape extends Shape{#lastDotsPos=null;constructor(fillColor,dynamicUpdates,pos,dots,radius,color,limit,drawEffectCB,ratioPosCB,setupCB,anchorPos,alwaysActive,fragile){super(pos,dots,radius,color,limit,drawEffectCB,ratioPosCB,setupCB,anchorPos,alwaysActive,fragile),this._initFillColor=fillColor,this._fillColor=this._initFillColor,this._path=null,this._dynamicUpdates=dynamicUpdates}initialize(){super.initialize(),CDEUtils.isFunction(this._initFillColor)?this.fillColor=this._initFillColor(this.ctx,this):this.fillColor=this._initFillColor,this.updatePath()}draw(ctx,time,deltaTime){super.draw(ctx,time,deltaTime),this.dots.length>2&&(this._dynamicUpdates&&this.updatePath(),ctx.fillStyle=this.fillColor,ctx.fill(this._path))}duplicate(){return this.initialized?new FilledShape(((_,shape)=>this.fillColorRaw instanceof Gradient?this.fillColorRaw.duplicate(Array.isArray(this.fillColorRaw.initPositions)?null:shape):this.fillColorObject.duplicate()),this._dynamicUpdates,this.pos_,this._dots.map((d=>d.duplicate())),this.radius,((_,shape)=>this.colorRaw instanceof Gradient?this.colorRaw.duplicate(Array.isArray(this.colorRaw.initPositions)?null:shape):this.colorObject.duplicate()),this.limit,this._drawEffectCB,this._ratioPosCB,this.setupCB,this._fragile):null}updatePath(){const d_ll=this.dots.length;if(d_ll){const currentDotPos=this.dotsPositions;if(currentDotPos!==this.#lastDotsPos){this.#lastDotsPos=currentDotPos,this._path=new Path2D,this._path.moveTo(...this.dots[0].pos);for(let i=1;i<d_ll;i++)this._path.lineTo(...this.dots[i].pos);this._path.closePath()}}}get fillColorObject(){return this._fillColor}get fillColorRaw(){return this._fillColor.colorRaw}get fillColor(){return this._fillColor.color}get initFillColor(){return this._initFillColor}get path(){return this._path}get dynamicUpdates(){return this._dynamicUpdates}set fillColor(fillColor){this.fillColorObject?.colorRaw?.toString()===fillColor.toString()&&this._fillColor||(this._fillColor=Color.adjust(fillColor))}set dynamicUpdates(_dynamicUpdates){return this._dynamicUpdates=_dynamicUpdates}}class Grid extends Shape{static DEFAULT_GAPS=[25,25];constructor(keys,gaps,spacing,source,pos,radius,color,limit,drawEffectCB,ratioPosCB,setupCB,anchorPos,alwaysActive,fragile){super(pos,null,radius,color,limit,drawEffectCB,ratioPosCB,setupCB,anchorPos,alwaysActive,fragile),this._keys=keys,this._gaps=gaps??Grid.DEFAULT_GAPS,this._spacing=spacing??this._source.width*this._gaps[0]+this._gaps[0]-this._source.width+this._radius,this._source=source??GridAssets.fontSource5x5}initialize(){super.initialize(),this._keys&&this.add(this.createGrid())}duplicate(){return this.initialized?new Grid(this._keys,[...this._gaps],this._spacing,this._source,this.pos_,this.radius,this.colorObject.duplicate(),this.limit,this._drawEffectCB,this._ratioPosCB,this.setupCB,this._fragile):null}createGrid(keys=this._keys,pos=[0,0],gaps=this._gaps,spacing=this._spacing,source=this._source){let[cx,cy]=pos,isNewLine=!0,symbols=[];return[...keys].forEach((l=>{const symbol=this.createSymbol(l,[cx="\n"===l?pos[0]:cx+spacing*!isNewLine,cy+="\n"===l&&source.width*gaps[1]+this.radius]);isNewLine="\n"===l,symbols.push(symbol)})),symbols.flat()}createSymbol(key,pos=super.relativePos,source=this._source){let dotGroup=[],[gx,gy]=this._gaps,xi=[0,0],yi=0,s=source[key.toUpperCase()],sourceRadius=Math.sqrt(source.width*source.height);return s&&s.map(((d,i)=>[new Dot([pos[0]+(xi[0]=d[0]??xi[0]+1,(isNaN(Math.abs(d[0]))?xi[0]:Math.abs(d[0]))*gx),pos[1]+(yi+=xi[0]<=xi[1]||!i||-1===Math.sign(1/xi[0]))*gy]),d[1],yi*sourceRadius+(xi[1]=Math.abs(xi[0]))])).forEach((([dot,c,p],_,a)=>{GridAssets.D.places.forEach((dir=>{c&dir[0]&&dot.addConnection(a.find((n=>n[2]===p+dir[1](sourceRadius)))?.[0])})),dotGroup.push(dot)})),dotGroup}setKeys(keys){super.clear(),this._keys=keys,super.add(this.createGrid())}setGaps(gaps){super.clear(),this._gaps=gaps,super.add(this.createGrid())}setSpacing(spacing){super.clear(),this._spacing=spacing,super.add(this.createGrid())}setSource(source){super.clear(),this._source=source,super.add(this.createGrid())}get keys(){return this._keys}get gaps(){return this._gaps}get spacing(){return this._spacing}get source(){return this._source}set keys(keys){return this._keys=keys}set gaps(gaps){return this._gaps=gaps}set spacing(spacing){return this._spacing=spacing}set source(source){return this._source=source}}class Dot extends Obj{constructor(pos,radius,color,setupCB,anchorPos,alwaysActive){super(pos,radius,color,setupCB,anchorPos,alwaysActive),this._parent=null,this._connections=[]}draw(ctx,time,deltaTime){if(this.initialized){if(CDEUtils.isFunction(this.drawEffectCB)){const dist=this.getDistance(),rawRatio=this.getRatio(dist);this.drawEffectCB(ctx,this,rawRatio>1?1:rawRatio,this.mouse,dist,this._parent,this.parentSetupResults,rawRatio)}ctx.fillStyle=this.color,ctx.beginPath(),ctx.arc(this.x,this.y,this._radius,0,CDEUtils.CIRC),ctx.fill()}else this.initialized=!0;super.draw(ctx,time,deltaTime)}duplicate(){return this.initialized?new Dot(this.pos_,this.radius,this.colorObject.duplicate(),this.setupCB):null}getDistance(fx,fy){return CDEUtils.getDist(fx??this.ratioPos[0],fy??this.ratioPos[1],this.x,this.y)}getRatio(dist){return dist/this.limit}addConnection(dot){dot instanceof Dot&&this._connections.push(dot)}removeConnection(dotOrId){this._connections=this._connections.filter((d=>"number"==typeof dotOrId?d.id!==dotOrId:d.id!==dotOrId.id))}getLinearIntersectPoints(target=this._connections[0],targetPadding=target.radius??5,source=this,sourcePadding=this.radius??5){const[tx,ty]=target.pos||target,[sx,sy]=source.pos||source,[a,b,lfn]=CDEUtils.getLinearFn([sx,sy],[tx,ty]),t_r=targetPadding**2,s_r=sourcePadding**2,qA=2*(1+a**2),s_qB=-(2*a*(b-sy)-2*sx),s_qD=Math.sqrt(s_qB**2-qA/2*4*((b-sy)**2+sx**2-s_r)),t_qB=-(2*a*(b-ty)-2*tx),t_qD=Math.sqrt(t_qB**2-qA/2*4*((b-ty)**2+tx**2-t_r)),s_x1=(s_qB+s_qD)/qA,s_x2=(s_qB-s_qD)/qA,t_x1=(t_qB+t_qD)/qA,t_x2=(t_qB-t_qD)/qA;return{source:{inner:[s_x1,lfn(s_x1)],outer:[s_x2,lfn(s_x2)]},target:{outer:[t_x1,lfn(t_x1)],inner:[t_x2,lfn(t_x2)]}}}remove(){CDEUtils.isFunction(this._parent.removeDot)?this._parent.removeDot(this._id):this._parent.remove(this._id)}get cvs(){return this._parent?.cvs}get ctx(){return this._parent?.cvs.ctx}get limit(){return this._parent?.limit}get drawEffectCB(){return this._parent?.drawEffectCB}get parent(){return this._parent}get mouse(){return this.cvs.mouse}get ratioPos(){return this._parent?.ratioPos}get connections(){return this._connections}get parentSetupResults(){return this._parent?.setupResults}set limit(limit){this._parent.limit=limit}set parent(p){this._parent=p}set connections(c){return this._connections=c}}